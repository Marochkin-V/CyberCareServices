@using CyberCareServices.ViewModels
@model ComponentsViewModel

@{
    ViewData["Title"] = "Components Overview";
}

<h1>Components</h1>

<table class="components-table">
    <thead>
        <tr>
            <th>#</th>
            <th width="10%">Component Type</th>
            <th width="5%">Brand</th>
            <th width="10%">Manufacturer</th>
            <th width="5%">Country</th>
            <th width="5%">Release Date</th>
            <th>Specifications</th>
            <th width="5%">Warranty (months)</th>
            <th>Description</th>
            <th width="5%">Price</th>
            <th width="5%">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var component in Model.Components)
        {
            <tr>
                <td>@component.ComponentId</td>
                <td>@component.ComponentType</td>
                <td>@component.Brand</td>
                <td>@(string.IsNullOrEmpty(component.Manufacturer) ? "Not specified" : component.Manufacturer)</td>
                <td>@(string.IsNullOrEmpty(component.CountryOfOrigin) ? "Not specified" : component.CountryOfOrigin)</td>
                <td>@(component.ReleaseDate?.ToString("yyyy-MM-dd") ?? "Not specified")</td>
                <td>@(string.IsNullOrEmpty(component.Specifications) ? "Not specified" : component.Specifications)</td>
                <td>@component.WarrantyPeriod</td>
                <td>@(string.IsNullOrEmpty(component.Description) ? "Not specified" : component.Description)</td>
                <td>@component.Price.ToString("C2")</td>
                <td>
                    <a asp-action="Details" asp-route-id="@component.ComponentId" class="btn btn-link cruid-icon">
                        <i class="bi bi-eye details-i"></i>
                    </a>
                    <a asp-action="Edit" asp-route-id="@component.ComponentId" class="btn btn-link cruid-icon">
                        <i class="bi bi-pencil-square edit-i"></i>
                    </a>
                    <a asp-action="Delete" asp-route-id="@component.ComponentId" class="btn btn-link text-danger cruid-icon">
                        <i class="bi bi-trash delete-i"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="pagination-container">
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           class="page page-outline-dark">
            &lt;---
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           class="page page-outline-dark">
            ---&gt;
        </a>
    }
</div>

<div class="add-container">
    <a asp-action="Create" class="page page-primary">Add New Component</a>
</div>