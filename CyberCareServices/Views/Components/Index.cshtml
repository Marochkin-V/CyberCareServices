@using CyberCareServices.ViewModels
@model ComponentsViewModel

@{
    ViewData["Title"] = "Components Overview";
}

<div class="table-name">
    <h1>Components</h1>
    <div class="plus-ico">
        <a asp-action="Create"><i class="bi bi-plus-circle-dotted"></i></a>
    </div>
</div>

<div class="search-container">
    <div class="search-form-custom">
        <form method="get">
            <div class="input-wrapper">
                <input class="form-control textarea-custom" type="text" name="searchQuery" placeholder="Search in description" value="@Model.SearchQuery" />
                <div class="search-icon">
                    <i class="bi bi-search"></i>
                </div>
            </div>
            <input type="hidden" name="sortField" value="@Model.SortField" />
            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
        </form>
    </div>
</div>




<table class="components-table">
    <thead>
        <tr>
            <th>@Html.ActionLink("#", "Index", new { sortField = "ComponentId", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th>@Html.ActionLink("Component Type", "Index", new { sortField = "ComponentType", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th width="5%">@Html.ActionLink("Brand", "Index", new { sortField = "Brand", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th>@Html.ActionLink("Specifications", "Index", new { sortField = "Specifications", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th>@Html.ActionLink("Manufacturer", "Index", new { sortField = "Manufacturer", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th>@Html.ActionLink("Country", "Index", new { sortField = "CountryOfOrigin", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th width="5%">@Html.ActionLink("Release Date", "Index", new { sortField = "ReleaseDate", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th width="5%">@Html.ActionLink("Warranty (months)", "Index", new { sortField = "WarrantyPeriod", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th>@Html.ActionLink("Price", "Index", new { sortField = "Price", sortOrder = Model.SortOrder == "asc" ? "desc" : "asc" })</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var component in Model.Components)
        {
            <tr onclick="location.href='@Url.Action("Details", "Components", new { id = component.ComponentId })';">
                <td>@component.ComponentId</td>
                <td>@component.ComponentType</td>
                <td>@component.Brand</td>
                <td>@(string.IsNullOrEmpty(component.Specifications) ? "Not specified" : component.Specifications)</td>
                <td>@(string.IsNullOrEmpty(component.Manufacturer) ? "Not specified" : component.Manufacturer)</td>
                <td>@(string.IsNullOrEmpty(component.CountryOfOrigin) ? "Not specified" : component.CountryOfOrigin)</td>
                <td>@(component.ReleaseDate?.ToString("yyyy-MM-dd") ?? "Not specified")</td>
                <td>@component.WarrantyPeriod</td>
                <td>@component.Price.ToString("C2")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@component.ComponentId" class="btn btn-link cruid-icon">
                        <i class="bi bi-pencil-square edit-i"></i>
                    </a>
                    <a asp-action="Delete" asp-route-id="@component.ComponentId" class="btn btn-link text-danger cruid-icon">
                        <i class="bi bi-trash delete-i"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="pagination-container">
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           class="page page-outline-dark pagination-btn">
            <i class="bi bi-arrow-up pgn-arrrows"></i>
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           class="page page-outline-dark pagination-btn">
            <i class="bi bi-arrow-down pgn-arrrows"></i>
        </a>
    }
</div>

<div class="add-container">
    <a asp-action="Create" class="page page-primary">Add New Component <i class="bi bi-plus-square-dotted"></i></a>
</div>